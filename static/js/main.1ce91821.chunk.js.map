{"version":3,"sources":["pages/Home.js","components/Navigation.js","pages/Resume.js","pages/About.js","pages/Portofolio.js","App.js","serviceWorker.js","index.js"],"names":["Home","overColor","e","target","style","color","leaveColor","className","size","to","onMouseLeave","onMouseOver","Navigation","history","useHistory","Container","Nav","Item","Link","onClick","push","Resume","About","Portofolio","App","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"8NA8CeA,MA1Cf,WACC,SAASC,EAAUC,GAClBA,EAAEC,OAAOC,MAAMC,MAAQ,OAExB,SAASC,EAAWJ,GACnBA,EAAEC,OAAOC,MAAMC,MAAQ,YAExB,OACC,oCACC,yBAAKE,UAAU,eACd,kBAAC,IAAD,CAAWF,MAAM,YAAYG,KAAK,KAAKD,UAAU,eACjD,kBAAC,IAAD,CAAaF,MAAM,YAAYG,KAAK,KAAKD,UAAU,eACnD,kBAAC,IAAD,CAAYF,MAAM,YAAYG,KAAK,KAAKD,UAAU,gBAEnD,wBAAIA,UAAU,SAAd,uBACA,wBAAIA,UAAU,YAAd,mCACA,wBAAIA,UAAU,WACb,kBAAC,IAAD,CAAME,GAAG,YACR,wBAAIC,aAAcJ,EAAYK,YAAaV,GAA3C,SAID,kBAAC,IAAD,CAAMQ,GAAG,kBACR,wBAAIC,aAAcJ,EAAYK,YAAaV,GAA3C,UAID,kBAAC,IAAD,CAAMQ,GAAG,mBACR,wBAAIC,aAAcJ,EAAYK,YAAaV,GAA3C,WAID,kBAAC,IAAD,CAAMQ,GAAG,uBACR,wBAAIC,aAAcJ,EAAYK,YAAaV,GAA3C,kB,gBCiCUW,MAlEf,WACC,IAAMC,EAAUC,cAchB,SAASb,EAAUC,GAClBA,EAAEC,OAAOC,MAAMC,MAAQ,OAExB,SAASC,EAAWJ,GACnBA,EAAEC,OAAOC,MAAMC,MAAQ,YAExB,OACC,oCACC,kBAACU,EAAA,EAAD,KACC,kBAACC,EAAA,EAAD,CAAKT,UAAU,uBACd,kBAACS,EAAA,EAAIC,KAAL,KACC,kBAACD,EAAA,EAAIE,KAAL,CACCR,aAAcJ,EACdK,YAAaV,EACbkB,QA1BN,WACCN,EAAQO,KAAK,cAsBT,SAQD,kBAACJ,EAAA,EAAIC,KAAL,KACC,kBAACD,EAAA,EAAIE,KAAL,CACCR,aAAcJ,EACdK,YAAaV,EACbkB,QAhCN,WACCN,EAAQO,KAAK,oBA4BT,UAQD,kBAACJ,EAAA,EAAIC,KAAL,KACC,kBAACD,EAAA,EAAIE,KAAL,CACCR,aAAcJ,EACdK,YAAaV,EACbkB,QAtCN,WACCN,EAAQO,KAAK,qBAkCT,WAQD,kBAACJ,EAAA,EAAIC,KAAL,KACC,kBAACD,EAAA,EAAIE,KAAL,CACCR,aAAcJ,EACdK,YAAaV,EACbkB,QA5CN,WACCN,EAAQO,KAAK,yBAwCT,mBC7CSC,MATf,WACC,OACC,oCACC,kBAAC,EAAD,MACA,wBAAId,UAAU,QAAd,YCKYe,MATf,WACC,OACC,oCACC,kBAAC,EAAD,MACA,wBAAIf,UAAU,QAAd,WCKYgB,MATf,WACC,OACC,oCACC,kBAAC,EAAD,MACA,wBAAIhB,UAAU,QAAd,gBCsBYiB,MAzBf,WACC,OACC,yBAAKjB,UAAU,OACd,8BACC,kBAAC,IAAD,KACC,kBAAC,IAAD,KACC,kBAAC,IAAD,CAAOkB,OAAK,EAACC,KAAK,YACjB,kBAAC,EAAD,OAED,kBAAC,IAAD,CAAOA,KAAK,kBACX,kBAAC,EAAD,OAED,kBAAC,IAAD,CAAOA,KAAK,mBACX,kBAAC,EAAD,OAED,kBAAC,IAAD,CAAOA,KAAK,uBACX,kBAAC,EAAD,Y,MCRaC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,MCVNC,IAASC,OACR,kBAAC,IAAMC,WAAP,KACC,kBAAC,EAAD,OAEDC,SAASC,eAAe,SDuHnB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.1ce91821.chunk.js","sourcesContent":["import React from \"react\";\nimport { FaTwitter, FaInstagram, FaLinkedin } from \"react-icons/fa\";\nimport { Link } from \"react-router-dom\";\n\nfunction Home() {\n\tfunction overColor(e) {\n\t\te.target.style.color = \"blue\";\n\t}\n\tfunction leaveColor(e) {\n\t\te.target.style.color = \"lightgrey\";\n\t}\n\treturn (\n\t\t<>\n\t\t\t<div className=\"socialGroup\">\n\t\t\t\t<FaTwitter color=\"lightgrey\" size=\"30\" className=\"socialIcon\" />\n\t\t\t\t<FaInstagram color=\"lightgrey\" size=\"30\" className=\"socialIcon\" />\n\t\t\t\t<FaLinkedin color=\"lightgrey\" size=\"30\" className=\"socialIcon\" />\n\t\t\t</div>\n\t\t\t<h1 className=\"title\">Indra Puji Novirwan</h1>\n\t\t\t<h3 className=\"subtitle\">Full Stack Javascript Developer</h3>\n\t\t\t<ul className=\"homeNav\">\n\t\t\t\t<Link to=\"/profile\">\n\t\t\t\t\t<li onMouseLeave={leaveColor} onMouseOver={overColor}>\n\t\t\t\t\t\tHome\n\t\t\t\t\t</li>\n\t\t\t\t</Link>\n\t\t\t\t<Link to=\"/profile/about\">\n\t\t\t\t\t<li onMouseLeave={leaveColor} onMouseOver={overColor}>\n\t\t\t\t\t\tAbout\n\t\t\t\t\t</li>\n\t\t\t\t</Link>\n\t\t\t\t<Link to=\"/profile/resume\">\n\t\t\t\t\t<li onMouseLeave={leaveColor} onMouseOver={overColor}>\n\t\t\t\t\t\tResume\n\t\t\t\t\t</li>\n\t\t\t\t</Link>\n\t\t\t\t<Link to=\"/profile/portofolio\">\n\t\t\t\t\t<li onMouseLeave={leaveColor} onMouseOver={overColor}>\n\t\t\t\t\t\tPortofolio\n\t\t\t\t\t</li>\n\t\t\t\t</Link>\n\t\t\t</ul>\n\t\t</>\n\t);\n}\n\nexport default Home;\n","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Nav, Container } from \"react-bootstrap\";\n\nfunction Navigation() {\n\tconst history = useHistory();\n\n\tfunction profile() {\n\t\thistory.push(\"/profile\");\n\t}\n\tfunction about() {\n\t\thistory.push(\"/profile/about\");\n\t}\n\tfunction resume() {\n\t\thistory.push(\"/profile/resume\");\n\t}\n\tfunction portofolio() {\n\t\thistory.push(\"/profile/portofolio\");\n\t}\n\tfunction overColor(e) {\n\t\te.target.style.color = \"blue\";\n\t}\n\tfunction leaveColor(e) {\n\t\te.target.style.color = \"lightgrey\";\n\t}\n\treturn (\n\t\t<>\n\t\t\t<Container>\n\t\t\t\t<Nav className=\"justify-content-end\">\n\t\t\t\t\t<Nav.Item>\n\t\t\t\t\t\t<Nav.Link\n\t\t\t\t\t\t\tonMouseLeave={leaveColor}\n\t\t\t\t\t\t\tonMouseOver={overColor}\n\t\t\t\t\t\t\tonClick={profile}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tHome\n\t\t\t\t\t\t</Nav.Link>\n\t\t\t\t\t</Nav.Item>\n\t\t\t\t\t<Nav.Item>\n\t\t\t\t\t\t<Nav.Link\n\t\t\t\t\t\t\tonMouseLeave={leaveColor}\n\t\t\t\t\t\t\tonMouseOver={overColor}\n\t\t\t\t\t\t\tonClick={about}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tAbout\n\t\t\t\t\t\t</Nav.Link>\n\t\t\t\t\t</Nav.Item>\n\t\t\t\t\t<Nav.Item>\n\t\t\t\t\t\t<Nav.Link\n\t\t\t\t\t\t\tonMouseLeave={leaveColor}\n\t\t\t\t\t\t\tonMouseOver={overColor}\n\t\t\t\t\t\t\tonClick={resume}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tResume\n\t\t\t\t\t\t</Nav.Link>\n\t\t\t\t\t</Nav.Item>\n\t\t\t\t\t<Nav.Item>\n\t\t\t\t\t\t<Nav.Link\n\t\t\t\t\t\t\tonMouseLeave={leaveColor}\n\t\t\t\t\t\t\tonMouseOver={overColor}\n\t\t\t\t\t\t\tonClick={portofolio}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tPortofolio\n\t\t\t\t\t\t</Nav.Link>\n\t\t\t\t\t</Nav.Item>\n\t\t\t\t</Nav>\n\t\t\t</Container>\n\t\t</>\n\t);\n}\nexport default Navigation;\n","import React from \"react\";\nimport Navigation from \"../components/Navigation\";\n\nfunction Resume() {\n\treturn (\n\t\t<>\n\t\t\t<Navigation />\n\t\t\t<h1 className=\"text\">Resume</h1>\n\t\t</>\n\t);\n}\n\nexport default Resume;\n","import React from \"react\";\nimport Navigation from \"../components/Navigation\";\n\nfunction About() {\n\treturn (\n\t\t<>\n\t\t\t<Navigation />\n\t\t\t<h1 className=\"text\">About</h1>\n\t\t</>\n\t);\n}\n\nexport default About;\n","import React from \"react\";\nimport Navigation from \"../components/Navigation\";\n\nfunction Portofolio() {\n\treturn (\n\t\t<>\n\t\t\t<Navigation />\n\t\t\t<h1 className=\"text\">Portofolio</h1>\n\t\t</>\n\t);\n}\n\nexport default Portofolio;\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { Home, About, Resume, Portofolio } from \"./pages\";\n\nfunction App() {\n\treturn (\n\t\t<div className=\"app\">\n\t\t\t<main>\n\t\t\t\t<Router>\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t<Route exact path=\"/profile\">\n\t\t\t\t\t\t\t<Home />\n\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t<Route path=\"/profile/about\">\n\t\t\t\t\t\t\t<About />\n\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t<Route path=\"/profile/resume\">\n\t\t\t\t\t\t\t<Resume />\n\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t<Route path=\"/profile/portofolio\">\n\t\t\t\t\t\t\t<Portofolio />\n\t\t\t\t\t\t</Route>\n\t\t\t\t\t</Switch>\n\t\t\t\t</Router>\n\t\t\t</main>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}